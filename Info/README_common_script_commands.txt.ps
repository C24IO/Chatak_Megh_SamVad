%!PS-Adobe-3.0
%%Title: README_common_script_commands.txt
%%For: root
%%Creator: a2ps version 4.13
%%CreationDate: Sun Mar 27 21:21:43 2005
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 4
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontType get 0 eq {
    currentfont /FontMatrix get 3 get
  }{
    currentfont /FontMatrix get 3 get 1000 mul
  } ifelse
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Define these in case they're not in the FontInfo (also, here
    % they're easier to get to.
    /UnderlinePosition 1 def
    /UnderlineThickness 1 def
    
    % Get the underline position and thickness if they're defined.
    currentdict /FontInfo known {
      FontInfo
      
      dup /UnderlinePosition known {
	dup /UnderlinePosition get
	0 exch FontMatrix transform exch pop
	/UnderlinePosition exch def
      } if
      
      dup /UnderlineThickness known {
	/UnderlineThickness get
	0 exch FontMatrix transform exch pop
	/UnderlineThickness exch def
      } if
      
    } if
    currentdict 
  end 
} bind def

% composite fonts for ASCII-EUC mixed strings
% Version 1.2 1/31/1990
% Original Ken'ichi HANDA (handa@etl.go.jp)
% Modified Norio Katayama (katayama@rd.nacsis.ac.jp),1998
% Extend & Fix Koji Nakamaru (maru@on.cs.keio.ac.jp), 1999
% Anyone can freely copy, modify, distribute this program.

/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont { % ASCIIFontName EUCFontName RomanScale RomanOffset Rot(T/F) compositefont font
    /RomanRotation exch def
    /RomanOffset exch def
    /RomanScale exch def
    userdict /fixeucfont_dict known not {
	userdict begin
	    /fixeucfont_dict 2 dict begin
		/UpperByteEncoding [
		    16#00 1 16#20 { pop 0 } for
		    16#21 1 16#28 { 16#20 sub } for
		    16#29 1 16#2F { pop 0 } for
		    16#30 1 16#74 { 16#27 sub } for
		    16#75 1 16#FF { pop 0 } for
		] def
	        /LowerByteEncoding [
		    16#00 1 16#A0 { pop /.notdef } for
		    16#A1 1 16#FE { 16#80 sub 16 2 string cvrs
				    (cXX) dup 1 4 -1 roll
				    putinterval cvn } for
		    /.notdef
		] def
		currentdict
	    end def
	end
    } if
    findfont dup /FontType get 0 eq {
	14 dict begin
	    %
	    % 7+8 bit EUC font
	    %
	    12 dict begin
		/EUCFont exch def
		/FontInfo (7+8 bit EUC font) readonly def
		/PaintType 0 def
		/FontType 0 def
		/FontMatrix matrix def
		% /FontName
		/Encoding fixeucfont_dict /UpperByteEncoding get def
		/FMapType 2 def
		EUCFont /WMode known
		{ EUCFont /WMode get /WMode exch def }
		{ /WMode 0 def } ifelse
		/FDepVector [
		    EUCFont /FDepVector get 0 get
		    [ 16#21 1 16#28 {} for 16#30 1 16#74 {} for ]
		    {
			13 dict begin
			    /EUCFont EUCFont def
			    /UpperByte exch 16#80 add def	
			    % /FontName
			    /FontInfo (EUC lower byte font) readonly def
			    /PaintType 0 def
			    /FontType 3 def
			    /FontMatrix matrix def
			    /FontBBox {0 0 0 0} def
			    /Encoding
				fixeucfont_dict /LowerByteEncoding get def
			    % /UniqueID
			    % /WMode
			    /BuildChar {
				gsave
				exch dup /EUCFont get setfont
				/UpperByte get
				2 string
				dup 0 4 -1 roll put
				dup 1 4 -1 roll put
				dup stringwidth setcharwidth
				0 0 moveto show
				grestore
			    } bind def
			    currentdict
			end
			/lowerbytefont exch definefont
		    } forall
		] def
		currentdict
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		RomanRotation {
			/FontMatrix FontMatrix
			[ 0 RomanScale neg RomanScale 0 RomanOffset neg 0 ]
			matrix concatmatrix def
		}{
			/FontMatrix FontMatrix
			[ RomanScale 0 0 RomanScale 0 RomanOffset ] matrix concatmatrix
			def
			/CDevProc
			    {pop pop pop pop 0 exch -1000 exch 2 div 880} def
		} ifelse
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
%	    /FontHeight 1.0 def % XXXX
	    /FontHeight RomanScale 1.0 ge { RomanScale }{ 1.0 } ifelse def
	    /Descent -0.3 def   % XXXX
	    currentdict
	end
	/tmpfont exch definefont
	pop
	/tmpfont findfont
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(Mike Chirico \(mchirico@users.sourceforge.net\) \(mchirico@comcast.net\)) p n
(Copyright \(c\) 2004 \(GPU Free Documentation License\) ) N
(Last Updated: Thu Jul 22 15:05:46 EDT 2004) N
() N
(The latest version of this document can be found at:) N
(http://prdownloads.sourceforge.net/souptonuts/README_common_script_commands.txt?) N
(download) N
() N
(Programs and scripts that go along with this document:) N
(http://prdownloads.sourceforge.net/souptonuts/common_script_commands.tar.gz?down) N
(load) N
() N
() N
(Automating FTP, generating email alerts, sending GPG encrypted email from) N
(the command prompt with the appropriate "pgp-encrypted" mime types, and running ) N
(MySQL) N
(from the command without exposing passwords, are all detailed below.) N
() N
() N
(SCRIPT 1:) N
() N
(       Automating FTP.) N
() N
(       The passwords for "ftp"  can be stored in the  "~/.netrc" file. Here's) N
(       an example file that specifies 3 different logins. A default login using) N
(       "anonymous" and password user@site. A different password for upload.sourc) N
(eforge.net,) N
(       and the login "bobby" and password "b0bb13" only for computer 192.168.1.3) N
(5.) N
(        ) N
(          $  cat ~/.netrc) N
() N
(               default login anonymous password user@site) N
(               machine upload.sourceforge.net login anonymous password m@temp.co) N
(m) N
(               machine 192.168.1.35 login bobby password b0bb13) N
() N
(       Once created this file should be protected as follows:) N
() N
(          $  chmod 0400 ~/.netrc) N
() N
(       Next, the following script will create two directories  "/faq/unix-faq" u) N
(nder home, without error,) N
(       if they do not exist. This is the advantage of using the "mkdir" with the) N
( "-p" option, which can) N
(       create several layers of subdirectories, or if all directories exist does) N
( not return with an error.) N
() N
(          #!/bin/bash                                            ) N
(          #                                                      ) N
(          #  Sample ftp automated script to download             ) N
(          #  file to $dwnld                                      ) N
(          #                                                      ) N
(          dwnld=~/faq/unix-faq                                   ) N
(          mkdir -p $dwnld                                        ) N
(          cd $dwnld                                              ) N
(          ftp << FTPSTRING                                       ) N
(          prompt off                                             ) N
(          open rtfm.mit.edu                                      ) N
(          cd /pub/usenet-by-group/news.answers/unix-faq/faq      ) N
(          mget contents                                          ) N
(          mget diff                                              ) N
(          mget part*                                             ) N
(          bye                                                    ) N
(          FTPSTRING                                              ) N
() N
(       Note: quotes are not used in the initial assignment of the  variable dwnl) N
(d. ) N
(             Without quotes, it refers to the user's home "/home/chirico/faq/uni) N
(README_common_script_commands.txt) (Page 1/8) (Mar 24, 05 6:57) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(x-faq") p n
(             for the user chirico.) N
() N
(                 $ dwnld=~/faq/unix-faq    # This is good. Refers  /home/chirico) N
(/faq/unix-faq) N
() N
(                 $ dwnld="~/faq/unix-faq"  # No good. Refers to a directory '~' ) N
(at current location) N
() N
(      ) N
() N
(SCRIPT 2:) N
() N
(       Using find.) N
() N
(       The following will find all files > 20k in the current directory.) N
() N
(            $ find . -size +20K) N
() N
(       The following will find all files, except  "/CVS" and the files under it.) N
(       Plus, any files ending with a "~" will be ignored; but "here~is" will be) N
(       picked up in this find.  ) N
() N
(            $ find . \\\( -iregex '.*/CVS'  -o -iregex '.*~' \\\)  -prune -o -print) N
() N
(       The above command can be used for creating a "tar.gz" for all the files u) N
(nder) N
(       the "test" directory. The "-H ustar" is for the gnu/posix version of tar.) N
() N
(            $ find ./test \\\( -iregex '.*/CVS'  -o -iregex '.*~' \\\)  -prune -o -p) N
(rint | cpio -o -H ustar |gzip > data.tar.gz) N
() N
(       But wait, you now may want to append additional files, for instance what ) N
(is under "./test2",  to "data.tar.gz") N
() N
(            $ gunzip data.tar.gz) N
(            $ find ./test2 \\\( -iregex '.*/CVS'  -o -iregex '.*~' \\\)  -prune -o -) N
(print | cpio -o -H ustar --append -F data.tar) N
(            $ gzip < data.tar > data.tar.gz) N
() N
(       That last command "$ gzip < data.tar > data.tar.gz"  could have been done) N
( with just "$ gzip data.tar".  But, the shorter) N
(       command deletes data.tar, which could be useful if more appends are neede) N
(d.) N
() N
() N
(       Find all '*.c' files with the 'current->signal->tty' in them, ignoring er) N
(rors. ) N
(  ) N
(            $ find . -iname '*.c' -exec grep -H 'current->signal->tty' {} \\; 2>/) N
(dev/null) N
() N
(               ./arch/i386/mach-voyager/voyager_thread.c:      current->signal->) N
(tty = NULL;) N
(               ./arch/sparc64/solaris/misc.c:                  current->signal->) N
(tty = NULL;) N
(               ./arch/ia64/kernel/unaligned.c:                         tty_write) N
(_message\(current->signal->tty, buf\);) N
(               ./drivers/net/slip.c:           if \(sl->tty != current->signal->t) N
(ty && sl->pid != current->pid\) {) N
(               ...) N
() N
(       Note above, the file name is given on the left.  Stuff like this can be g) N
(reat for finding changes in the kernel. By ) N
(       the way, "current->tty" was recently replaced with "current->signal->tty") N
( in 2.6+ versions of the Linux kernel.) N
() N
() N
(       Suppose you want 3 lines before "-B" the  grepped text and 2 lines after ) N
(README_common_script_commands.txt) (Page 2/8) (Mar 24, 05 6:57) title
border
grestore
(Printed by root) rhead
(./README_common_script_commands.txt) (1/4) (Sunday March 27, 2005) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
("-A". Then, use the "-A" for after and "-B" ) p n
(       for before as follows.) N
() N
(             $ find . -iname '*.c' -exec grep -H -A 2 -B 3 'current->signal->tty) N
(' {} \\; 2>/dev/null) N
() N
(                ./kernel/exit.c-        exit_mm\(current\);                ) N
(                ./kernel/exit.c-                                         ) N
(                ./kernel/exit.c-        set_special_pids\(1, 1\);          ) N
(                ./kernel/exit.c:        current->signal->tty = NULL;     ) N
(                ./kernel/exit.c-                                         ) N
(                ./kernel/exit.c-        /* Block and flush all signals */) N
() N
() N
(       INODES.) N
() N
(         It's possible to create a file or directory with any character except ') N
(/' or the '\\0' character. ) N
() N
() N
(             $ touch  'this~\\nis one big file here' ) N
(             ) N
(         To get the inode of the file) N
() N
(             $ ls -il th*) N
() N
(                 75489 -rw-rw-r-- 1 chirico  chirico 0 Jul 20 15:28 this~\\nis on) N
(e big file here) N
() N
(         Find can look for a particular inode as follows:) N
() N
(             $ find . -inum 75489) N
() N
(         To easily remove this file by its inode) N
() N
(             $ find . -inum 75489 -exec rm {} \\;) N
() N
() N
(      FIND and REPLACE) N
() N
(         This can be difficult. Should replacements be made in executable files?) N
( And not all replacements should be made.. consider ) N
(         files under the the ./CVS directory.  For an example program, see the d) N
(ownloads.) N
() N
(      OTHER USES) N
() N
(       Find all files, starting at the root, accessed < n*24 hours ago ignoring ) N
(errors.) N
(       Here n=-1.  For > 24 hours set n=+1, and "exactly" 24 hours ago n=1.) N
() N
(         $ find / -atime -1 2>/dev/null) N
() N
(       ) N
() N
(SCRIPT 3:) N
() N
(      Email alerts) N
() N
(      Assume the following file "data") N
() N
(            $ cat data) N
(               1 one   ) N
(               2 two   ) N
(               3 three ) N
(               4 four  ) N
() N
(      "awk" can zero in on line and column.) N
() N
(README_common_script_commands.txt) (Page 3/8) (Mar 24, 05 6:57) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(            $ awk '/3/ { print $2 }' data) p n
(               three) N
() N
(      And, system commands can be run as well. Following is an example using) N
(      "wc" word count.) N
() N
(            $ awk '/3/ { print $2| "wc" }' data) N
(              1       1       6) N
(        ) N
(      Or, to email data with the subject  " Useless Topic Matching 3"  to ) N
(      mchirico@comcast.net. \\x27 is equal to a single quote, "man ascii".) N
() N
(            $ awk '/3/ { print $2| "mail -s \\x27 Useless Topic Matching 3 \\x27 m) N
(chirico@comcast.net "}' data) N
() N
(      This following command emails io stats, with "uname -a" giving the full co) N
(mputer name. The date includes the) N
(      month, day, year and time, down to the nano-second. ) N
() N
(            $ \(uname -a;date "+%m.%d.%y %H:%M:%S.%N";iostat\) | awk '{print $0|"m) N
(ail -s \\x27 iostats \\x27 mchirico@comcast.net "}' ) N
() N
() N
(      With awk sometimes it's necessary to pass along a  variable.  Consider a s) N
(cript that will kill every ) N
(      process for a user. Here the first argument passed to the shell script is ) N
(being passed along) N
(      to awk.) N
() N
(         #!/bin/bash                                                      ) N
(         #) N
(         #  This program will kill all processes from a         ) N
(         #  user.  The user name is read from the command line. ) N
(         #                                                      ) N
(         #  Usage: kill9user <user>                             ) N
(         #                                                      ) N
(         kill -9 `ps aux|awk -v var=$1 '$1==var { print $2 }'`  ) N
() N
() N
() N
(SCRIPT 4:) N
() N
(      Sending GPG Encrypted Email from the Command Line.) N
() N
(      GPG the GNU version of PGP is a way of encrypting data easily) N
(      using a public key.  This is ideal. No transferring or communicating) N
(      a password between parties.) N
() N
(      For instance, the following command will encrypt the data in ) N
(      file.txt.) N
() N
(         $ openssl des3 -salt -in file.txt -out file.des3 -k secretPassword) N
() N
(      However, when the recepient gets this file, that user must know "secretPas) N
(sword") N
(      to decrypt.  Or, if this is done in a batch job, the password may be expos) N
(ed.) N
() N
(         $ openssl des3 -d -salt -in file.des3 -out file.txt -k secretPassword) N
() N
(      GPG avoids this problem.  There is no sharing of passwords. For a more det) N
(ailed) N
(      description of GPG see the references below.) N
() N
(      It's not enough to encrypt the email message and embed it into the body of) N
( the message.) N
(      The mime type should be set as "pgp-encrypted", or else the user is ) N
(      forced to copy and past the message, or develop a script to extract ) N
(      the text. This is an example that embeds the  message and sets ) N
(README_common_script_commands.txt) (Page 4/8) (Mar 24, 05 6:57) title
border
grestore
(Printed by root) rhead
(./README_common_script_commands.txt) (2/4) (Sunday March 27, 2005) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(      the mime type correctly with a boundary.  Users that have gpg or pgp ) p n
(      configured emails  will automatically be prompted for a password.) N
() N
(      Ideally the script should work as follows) N
() N
(         $  ls -l|./sndmailBash fruser@isp.net touser@isp.net "Example ls -l cmd) N
(" 0xA11C1499               ) N
() N
(      The contents of the "ls -l" command is encrypted into the body of the mess) N
(age, it's) N
(      from the user "fruser@isp.net" and to the user "touser@isp.net". The subje) N
(ct of the) N
(      message is "Example ls -l cmd" and it's encrypted with the pgp key 0xA11C1) N
(499.) N
() N
(      The "sndmailBash" program will set the "Content-Type" to be pgp-encrypted,) N
( by piping) N
(      this to the "sendmail -t" cmd. The "-t" option is to parse prefixes like ") N
(From: ", ) N
(      "To: ", "Subject: ", etc.  The boundary is static, but should be unique.) N
() N
(      Here is the "sndmailBash" script that will do this:) N
() N
(       #!/bin/bash                                                              ) N
(                                 ) N
(       # Created: Mike Chirico mchirico@users.sourceforge.net or mchirico@comcas) N
(t.net                            ) N
(       # Copyright GPL 2004                                                     ) N
(                                 ) N
(       # Last Updated: Wed Jul 21 14:14:10 EDT 2004                             ) N
(                                 ) N
(       # Download: http://prdownloads.sourceforge.net/souptonuts/common_script_c) N
(ommands.tar.gz?download          ) N
(       #                                                                        ) N
(                                 ) N
(       # Sample usage:                                                          ) N
(                                 ) N
(       #  $  ./sndmailBash <from> <to> "<subject>"  <gpgkey>  < file) N
(       #         or) N
(       #  $  some command|./sndmailBash <from> <to> "<subject>"  <gpgkey>  ) N
(       #) N
(       # Specific example:                                                    ) N
(       #                                                                        ) N
(                                 ) N
(       #  $  ./sndmailBash mchirico@comcast.net mchirico@comcast.net "Subject he) N
(re" 0xA11C1499 < data            ) N
(       #               or                                                       ) N
(                                 ) N
(       #  $  ls -l|./sndmailBash mchirico@comcast.net mchirico@comcast.net "ls l) N
(isting" 0xA11C1499               ) N
(       #                                                                        ) N
(                                 ) N
(       #     The above command will send an email from "mchirico@comcast.net" to) N
( "mchirico@comcast.net"          ) N
(       #     with the subject "ls listing" encrypted with the pgp key "0xA11C149) N
(9".                              ) N
(       #                                                                        ) N
(                                 ) N
(       #     The command below will list the gpg keys.                          ) N
(                                 ) N
(       #                                                                        ) N
(                                 ) N
(       #      $ gpg --list-keys                                                 ) N
(                                 ) N
(       #            /home/chirico/.gnupg/pubring.gpg                            ) N
(                                 ) N
(       #            --------------------------------                            ) N
(                                 ) N
(       #            pub  1024D/A11C1499 2004-07-15 Mike Chirico  <mchirico@comca) N
(README_common_script_commands.txt) (Page 5/8) (Mar 24, 05 6:57) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(st.net>                          ) p n
(       #                        ^-------                                        ) N
(                                 ) N
(       #                               |___ add "0x" for "0xA11C1499"           ) N
(                                 ) N
(       #                                                                        ) N
(                                 ) N
(       #      Obviously this is my key, so add the correct recipient key.       ) N
(                                 ) N
(       #                                                                        ) N
(                                 ) N
(       From=${1}                                                                ) N
(       ) N
(       To=${2}                                                                  ) N
(       ) N
(       Subject=${3}                                                             ) N
(       ) N
(                                                                                ) N
(       ) N
(       #Content=`cat | gpg  -r ${4}  --encrypt --armor `                        ) N
(       ) N
(       Content=$\(gpg  -r ${4}  --encrypt --armor \)                              ) N
(       ) N
(                                                                                ) N
(       ) N
(                                                                                ) N
(       ) N
(       /usr/sbin/sendmail -t <<EOF                                              ) N
(       ) N
(       From: ${From}                                                            ) N
(       ) N
(       To: ${To}                                                                ) N
(       ) N
(       Subject: ${Subject}                                                      ) N
(       ) N
(       Mime-Version: 1.0                                                        ) N
(       ) N
(       Content-Type: multipart/encrypted; protocol="application/pgp-encrypted"; ) N
(       ) N
(               boundary="B835649000072104Jul07"                                 ) N
(       ) N
(       Content-Disposition: inline                                              ) N
(       ) N
(       User-Agent: Mutt/1.4.1i                                                  ) N
(       ) N
(                                                                                ) N
(       ) N
(                                                                                ) N
(       ) N
(       --B835649000072104Jul07                                                  ) N
(       ) N
(       Content-Type: application/pgp-encrypted                                  ) N
(       ) N
(       Content-Disposition: attachment                                          ) N
(       ) N
(                                                                                ) N
(       ) N
(       Version: 1                                                               ) N
(       ) N
(                                                                                ) N
(       ) N
(       --B835649000072104Jul07                                                  ) N
(       ) N
(       Content-Type: application/octet-stream                                   ) N
(       ) N
(       Content-Disposition: inline; filename="msg.asc"                          ) N
(       ) N
(                                                                                ) N
(       ) N
(README_common_script_commands.txt) (Page 6/8) (Mar 24, 05 6:57) title
border
grestore
(Printed by root) rhead
(./README_common_script_commands.txt) (3/4) (Sunday March 27, 2005) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (7-8) 4
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(       ${Content}                                                               ) p n
(       ) N
(                                                                                ) N
(       ) N
(                                                                                ) N
(       ) N
(       --B835649000072104Jul07--                                                ) N
(       ) N
(                                                                                ) N
(       ) N
(       EOF                                                                      ) N
(       ) N
(                                                                                ) N
(       ) N
() N
(     If you want more detail on gpg, reference \(TIP 86\) at) N
(      http://prdownloads.sourceforge.net/souptonuts/How_to_Linux_and_Open_Source) N
(.txt?download) N
() N
() N
() N
(SCRIPT 5:) N
() N
(       Working with MySQL on the Command Line.) N
() N
(       The following command will query the "exams" table in the "test" database) N
(.) N
() N
(             $ mysql --skip-column-names -s -e "select * from exams" test) N
() N
(                1       Bob     1       75                ) N
(                2       Bob     2       77) N
(                3       Bob     3       78) N
(                4       Bob     4       80) N
(                5       Sue     1       90) N
(                6       Sue     2       97) N
(                7       Sue     3       98) N
(                8       Sue     4       99) N
() N
(       To prevent password and username prompting, create a ".my.cnf" in) N
(       the user's home directory  "/home/chirico/.my.cnf" and enter) N
(       the username and password, similar to the following.) N
(      ) N
(             [client]         ) N
(             user=user1) N
(             password=p@ssw0rd) N
() N
(       The above method is the recommended way, since other methods) N
(       may show the password when anyone does a "ps -aux" command.) N
() N
() N
() N
() N
(REFERENCES:) N
() N
(\(Programs for this document\)) N
(   http://prdownloads.sourceforge.net/souptonuts/common_script_commands.tar.gz?d) N
(ownload) N
() N
(\(awk and shell\)) N
(   http://www-106.ibm.com/developerworks/library/l-awk3.html) N
(   http://sparky.rice.edu/~hartigan/awk.html) N
(   http://www.shelldorado.com/) N
(   http://www.intuitive.com/wicked/index.shtml) N
() N
(\(GPG\)) N
(   http://www.gnupg.org/documentation/faqs.html) N
(   http://codesorcery.net/mutt/mutt-gnupg-howto) N
(   http://www.gnupg.org/\(en\)/download/index.html) N
(README_common_script_commands.txt) (Page 7/8) (Mar 24, 05 6:57) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
() N
(OTHER TIPS:) N
() N
(For tips on MySQL reference:) N
(http://prdownloads.sourceforge.net/souptonuts/README_mysql.txt?download) N
() N
(For tips on upgrading RedHat 9 or 8.0 to 2.6.x src kernel) N
(with Fedora Updates, reference:) N
(http://prdownloads.sourceforge.net/souptonuts/README_26.txt?download) N
() N
(For tips on Comcast Email with Home Linux Box) N
(http://prdownloads.sourceforge.net/souptonuts/README_COMCAST_EMAIL.txt?download) N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
(bind '"\\C-t": "mutt\\n"') N
( ) N
(README_common_script_commands.txt) (Page 8/8) (Mar 24, 05 6:57) title
border
grestore
(Printed by root) rhead
(./README_common_script_commands.txt) (4/4) (Sunday March 27, 2005) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
